<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>en-US</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>Quick for Cortana</value>
  </data>
  <data name="Auto_Delete" xml:space="preserve">
    <value>false</value>
    <comment>Controls if the app is going to automatic delete older notes</comment>
  </data>
  <data name="Maximum_Date" xml:space="preserve">
    <value>1</value>
    <comment>Controls the amount of days for the app delete older ntoes</comment>
  </data>
  <data name="Verify_Input" xml:space="preserve">
    <value>true</value>
  </data>
  <data name="AppBarButtonTextDelete" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="AppBarButtonTextSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="First_Use" xml:space="preserve">
    <value>true</value>
  </data>
  <data name="Database_Version" xml:space="preserve">
    <value>1.0</value>
  </data>
  <data name="Tutorial1" xml:space="preserve">
    <value>Welcome to Quick, the first audible notes extension for Cortana. Here you can use Cortana to do quick audible notes! Let's go trough a fast how-to</value>
  </data>
  <data name="Tutorial1_Header" xml:space="preserve">
    <value>hello</value>
  </data>
  <data name="Tutorial2" xml:space="preserve">
    <value>Open Cortana by pressing the search button, or touching her live tile or, if your Windows Phone is updated with the Lumia Denim update, just say 'Hey Cortana'.</value>
  </data>
  <data name="Tutorial2_1" xml:space="preserve">
    <value>Now, say to her Quick + I + something you want to be remembered later:"</value>
  </data>
  <data name="Tutorial2_2" xml:space="preserve">
    <value>Quick I Parked my car at sesame street</value>
  </data>
  <data name="Tutorial2_3" xml:space="preserve">
    <value>Quick I left my keys on my room</value>
  </data>
  <data name="Tutorial2_4" xml:space="preserve">
    <value>Quick I put my torch on the dining table</value>
  </data>
  <data name="Tutorial2_5" xml:space="preserve">
    <value>Quick I kept my .net book in the my bag</value>
  </data>
  <data name="Tutorial2_Header" xml:space="preserve">
    <value>taking a note</value>
  </data>
  <data name="Tutorial3" xml:space="preserve">
    <value>Later, when you want to know something that you noted, open Cortana one more time and say to her:"</value>
  </data>
  <data name="Tutorial3_1" xml:space="preserve">
    <value>Quick where is my car?</value>
  </data>
  <data name="Tutorial3_2" xml:space="preserve">
    <value>Then, she will answear you with:</value>
  </data>
  <data name="Tutorial3_3" xml:space="preserve">
    <value>Your car is at sesame street</value>
  </data>
  <data name="Tutorial3_4" xml:space="preserve">
    <value>Now you are good to go! If you have any suggestions to improve this app, review it, i'll be glad to hear your opinion. Thanks!</value>
  </data>
  <data name="Tutorial3_5" xml:space="preserve">
    <value>Quick where did i left my keys?</value>
  </data>
  <data name="Tutorial3_6" xml:space="preserve">
    <value>Quick where did i put my torch?</value>
  </data>
  <data name="Tutorial3_7" xml:space="preserve">
    <value>You left  your keys at your room</value>
  </data>
  <data name="Tutorial3_8" xml:space="preserve">
    <value>Your torch is on the dinning table</value>
  </data>
  <data name="Tutorial3_Header" xml:space="preserve">
    <value>asking for a note</value>
  </data>
  <data name="Tutorial4" xml:space="preserve">
    <value>If you don't know where Cortana is and your country native language is English, follow this guide to enable Cortana on your Windows Phone, If you live in Germany, Spain and others, wait a little bit, this app will support your language soon.</value>
  </data>
  <data name="Tutorial4_Button" xml:space="preserve">
    <value>How do i enable Cortana?</value>
  </data>
  <data name="Tutorial4_Header" xml:space="preserve">
    <value>where is she?</value>
  </data>
</root>